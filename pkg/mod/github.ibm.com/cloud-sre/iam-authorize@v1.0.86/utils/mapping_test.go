package utils

import (
	"log"
	"net/http"
	"testing"

	"github.com/stretchr/testify/assert"
)

var tests = []struct {
	name               string
	method             string
	url                string
	expectedResource   string
	expectedPermission string
}{
	{
		"status-maintenance",
		http.MethodGet,
		"https://api-oss-staging.bluemix.net/pnpstatus/api/v1/pnp/status/maintenances?pnpCreationTimeStart=2019-04-18T12:17:38-05:00",
		"pnp1-status-maintenances",
		"pnp-api-oss.rest.get",
	},
	{
		"status-maintenance-id",
		http.MethodPost,
		"https://api-oss-staging.bluemix.net/pnpstatus/api/v1/pnp/status/maintenances/abc123",
		"pnp1-status-maintenances-id",
		"pnp-api-oss.rest.post",
	},
	{
		"api-info",
		http.MethodGet,
		"https://api-oss-staging.bluemix.net/api/info",
		"",
		"",
	},
	{
		"api-catalog-impls",
		http.MethodPost,
		"https://api-oss-staging.bluemix.net/api/catalog/impls",
		"catalog1-impls-id",
		"pnp-api-oss.rest.post",
	},
	{
		"pnp-subscription-watch-delete",
		http.MethodDelete,
		"https://api-oss-staging.bluemix.net/pnpsubscription/api/v1/pnp/subscriptions/e2a6152e-f23e-44c4-ba00-726dd8be345b/watches/f088f210-e948-4b16-8f17-a23f1a0ab4e8",
		"pnp1-subscriptions-id-watches-id",
		"pnp-api-oss.rest.delete",
	},
	{
		"pnp-subscription-junk-delete",
		http.MethodDelete,
		"/api/v1/pnp/subscriptions/e2a6152e-f23e-44c4-ba00-726dd8be345b/watchesjunk/f088f210-e948-4b16-8f17-a23f1a0ab4e8",
		"Error",
		"pnp-api-oss.rest.delete",
	},
	{
		"status-incident",
		http.MethodGet,
		"https://api-oss-staging.bluemix.net/pnpstatus/api/v1/pnp/status/incidents?pnpCreationTimeStart=2019-04-18T12:17:38-05:00",
		"pnp1-status-incidents",
		"pnp-api-oss.rest.get",
	},
	{
		"status-incidents-id",
		http.MethodGet,
		"https://api-oss-staging.bluemix.net/pnpstatus/api/v1/pnp/status/incidents/abc123",
		"pnp1-status-incidents-id",
		"pnp-api-oss.rest.get",
	},
	{
		"status-incident-id-affects",
		http.MethodGet,
		"https://api-oss-staging.bluemix.net/pnpstatus/api/v1/pnp/status/incidents/abc123/affects",
		"pnp1-status-incidents-id-affects",
		"pnp-api-oss.rest.get",
	},
	{
		"status-maintenance-id-affects",
		http.MethodGet,
		"https://api-oss-staging.bluemix.net/pnpstatus/api/v1/pnp/status/maintenances/abc123/affects",
		"pnp1-status-maintenances-id-affects",
		"pnp-api-oss.rest.get",
	},
	{
		"issuecreator-createIssues",
		http.MethodPost,
		"/api/v1/issuecreator/createIssues",
		"issuecreator1-createIssues",
		"pnp-api-oss.rest.post",
	},
	{
		"issuecreator-getSFIssues",
		http.MethodGet,
		"/api/v1/issuecreator/getSFIssues",
		"issuecreator1-getSFIssues",
		"pnp-api-oss.rest.get",
	},
	{
		"issuecreator-getSFServices",
		http.MethodGet,
		"/api/v1/issuecreator/getSFServices",
		"issuecreator1-getSFServices",
		"pnp-api-oss.rest.get",
	},
	{
		"issuecreator-getSFIssuesByPillarFilter",
		http.MethodPost,
		"/api/v1/issuecreator/getSFIssuesByPillarFilter",
		"issuecreator1-getSFIssuesByPillarFilter",
		"pnp-api-oss.rest.post",
	},
	{
		"issuecreator-getSFIssuesByPillar",
		http.MethodGet,
		"/api/v1/issuecreator/getSFIssuesByPillar",
		"issuecreator1-getSFIssuesByPillar",
		"pnp-api-oss.rest.get",
	},
	{
		"issuecreator-getWorkflows",
		http.MethodGet,
		"/api/v1/issuecreator/getWorkflows",
		"issuecreator1-getWorkflows",
		"pnp-api-oss.rest.get",
	},
	{
		"issuecreator-healthz",
		http.MethodGet,
		"/api/v1/issuecreator/healthz",
		"",
		"",
	},
	{
		"scorecardbackend-info",
		http.MethodGet,
		"/api/info",
		"",
		"",
	},
	{
		"scorecardbackend-CIEAvailability",
		http.MethodGet,
		"/api/v1/scorecardbackend/CIEAvailability",
		"scorecardbackend1-CIEAvailability",
		"pnp-api-oss.rest.get",
	},
	{
		"scorecardbackend-edbAggregatedRollingMetrics",
		http.MethodGet,
		"/api/v1/scorecardbackend/edbAggregatedRollingMetrics",
		"scorecardbackend1-edbAggregatedRollingMetrics",
		"pnp-api-oss.rest.get",
	},
	{
		"scorecardbackend-edbDailyAvailability",
		http.MethodGet,
		"/api/v1/scorecardbackend/edbDailyAvailability",
		"scorecardbackend1-edbDailyAvailability",
		"pnp-api-oss.rest.get",
	},
	{
		"scorecardbackend-edbMetricsCertification",
		http.MethodGet,
		"/api/v1/scorecardbackend/edbMetricsCertification",
		"scorecardbackend1-edbMetricsCertification",
		"pnp-api-oss.rest.get",
	},
	{
		"scorecardbackend-edbMetricsCertification",
		http.MethodPost,
		"/api/v1/scorecardbackend/edbMetricsCertification",
		"scorecardbackend1-edbMetricsCertification",
		"pnp-api-oss.rest.post",
	},
	{
		"scorecardbackend-getReport",
		http.MethodGet,
		"/api/v1/scorecardbackend/getReport",
		"scorecardbackend1-getReport",
		"pnp-api-oss.rest.get",
	},
	{
		"scorecardbackend-sendReport",
		http.MethodGet,
		"/api/v1/scorecardbackend/sendReport",
		"scorecardbackend1-sendReport",
		"pnp-api-oss.rest.get",
	},
	{
		"scorecardbackend-edbReportURLs",
		http.MethodGet,
		"/api/v1/scorecardbackend/edbReportURLs",
		"scorecardbackend1-edbReportURLs",
		"pnp-api-oss.rest.get",
	},
	{
		"scorecardbackend-edbRollingAvailability",
		http.MethodGet,
		"/api/v1/scorecardbackend/edbRollingAvailability",
		"scorecardbackend1-edbRollingAvailability",
		"pnp-api-oss.rest.get",
	},
	{
		"scorecardbackend-getOSSRecords",
		http.MethodGet,
		"/api/v1/scorecardbackend/getOSSRecords",
		"scorecardbackend1-getOSSRecords",
		"pnp-api-oss.rest.get",
	},
	{
		"scorecardbackend-getOSSValidations",
		http.MethodGet,
		"/api/v1/scorecardbackend/getOSSValidations",
		"scorecardbackend1-getOSSValidations",
		"pnp-api-oss.rest.get",
	},
	{
		"scorecardbackend-getTIPOnboardStatus",
		http.MethodGet,
		"/api/v1/scorecardbackend/getTIPOnboardStatus",
		"scorecardbackend1-getTIPOnboardStatus",
		"pnp-api-oss.rest.get",
	},
	{
		"scorecardbackend-certHealthStatus",
		http.MethodGet,
		"/api/v1/scorecardbackend/certHealthStatus",
		"scorecardbackend1-certHealthStatus",
		"pnp-api-oss.rest.get",
	},
	{
		"scorecardbackend-serviceCertList",
		http.MethodGet,
		"/api/v1/scorecardbackend/serviceCertList",
		"scorecardbackend1-serviceCertList",
		"pnp-api-oss.rest.get",
	},
	{
		"scorecardbackend-serviceCertHealthStatus",
		http.MethodPost,
		"/api/v1/scorecardbackend/serviceCertHealthStatus",
		"scorecardbackend1-serviceCertHealthStatus",
		"pnp-api-oss.rest.post",
	},
	{
		"scorecardbackend-sendDailyMetrics",
		http.MethodGet,
		"/api/v1/scorecardbackend/sendDailyMetrics",
		"scorecardbackend1-sendDailyMetrics",
		"pnp-api-oss.rest.get",
	},
	{
		"scorecardbackend-healthz",
		http.MethodGet,
		"/api/v1/scorecardbackend/healthz",
		"",
		"",
	},
	{
		"pnp1-subscriptions-id",
		http.MethodGet,
		"/api/v1/pnp/subscriptions/78fd4f34-87aa-4cc8-a511-d8de11801972/",
		"pnp1-subscriptions-id",
		"pnp-api-oss.rest.get",
	},
	{
		"bastion-api",
		http.MethodGet,
		"/bastion/api",
		"forbidden",
		"pnp-api-oss.rest.get",
	},
	{
		"bastion1-apiinfo",
		http.MethodGet,
		"/bastion/api/info",
		"bastion1-apiinfo",
		"pnp-api-oss.rest.get",
	},
	{
		"bastion1-accesscheck",
		http.MethodPost,
		"/bastion/api/v1/accesscheck",
		"bastion1-accesscheck",
		"pnp-api-oss.rest.post",
	},
}

func TestGetIAMResource(t *testing.T) {

	for _, tc := range tests {
		t.Run(tc.name, func(t *testing.T) {

			req, err := http.NewRequest(tc.method, tc.url, nil)

			if err != nil {
				log.Panic(err)

			}

			resource, permission := GetIAMResourceAndPermission(req)
			assert.Equal(t, tc.expectedResource, resource)
			assert.Equal(t, tc.expectedPermission, permission)
			log.Print(tc.name, " resource returned: ", resource)
			log.Print(tc.name, " permission returned: ", permission)
		})
	}
}
